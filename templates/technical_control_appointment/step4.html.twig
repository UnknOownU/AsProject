{% extends 'base.html.twig' %}

{% block body %}
    <div class="container mt-5">
        <h1 class="text-center mb-4">Étape 4: Vos informations</h1>

        {{ form_start(form, {'attr': {'id': 'appointmentForm', 'data-action': actionType}}) }}
            <div class="row">
                <div class="col-md-6 mb-3">
                    <div class="form-group">
                        {{ form_label(form.firstname) }}
                        {{ form_widget(form.firstname, {'attr': {'class': 'form-control'}}) }}
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="form-group">
                        {{ form_label(form.lastname) }}
                        {{ form_widget(form.lastname, {'attr': {'class': 'form-control'}}) }}
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="form-group">
                        {{ form_label(form.email) }}
                        {{ form_widget(form.email, {'attr': {'class': 'form-control'}}) }}
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="form-group">
                        {{ form_label(form.phone) }}
                        {{ form_widget(form.phone, {'attr': {'class': 'form-control'}}) }}
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="form-group">
                        {{ form_label(form.carBrand) }}
                        {{ form_widget(form.carBrand, {'attr': {'class': 'form-control'}}) }}
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="form-group">
                        {{ form_label(form.carModel) }}
                        {{ form_widget(form.carModel, {'attr': {'class': 'form-control'}}) }}
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="form-group">
                        {{ form_label(form.licensePlate) }}
                        {{ form_widget(form.licensePlate, {'attr': {'class': 'form-control'}}) }}
                    </div>
                </div>
            </div>

            <div class="text-center mt-4">
                <button type="submit" class="btn btn-warning btn-lg text-black">Finaliser la prise de rendez-vous</button>
            </div>
        {{ form_end(form) }}
    </div>

    <script>
        document.getElementById('appointmentForm').addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent the form from submitting the default way

            let form = this;
            let formData = new FormData(form);
            let actionType = form.getAttribute('data-action'); // Get the action type

            fetch(form.action, {
                method: form.method,
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    let successMessage = actionType === 'edit' 
                        ? 'Votre rendez-vous a été modifié avec succès!' 
                        : 'Votre rendez-vous a été enregistré avec succès!';
                    
                    Swal.fire({
                        title: 'Succès!',
                        text: successMessage,
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.href = '{{ path("app_technical_control_appointment_index") }}';
                    });
                } else if (data.status === 'error') {
                    let errorMessages = '';
                    for (let field in data.errors) {
                        errorMessages += `${field}: ${data.errors[field]}<br>`;
                    }
                    Swal.fire({
                        title: 'Erreur',
                        html: errorMessages,
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            })
            .catch((error) => {
                Swal.fire({
                    title: 'Erreur',
                    text: 'Une erreur inattendue est survenue.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            });
        });
    </script>
{% endblock %}
